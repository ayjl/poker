extends ./layout

block content
  div.row
    div.small-12.column
      if !profile
        h2 This profile couldn't be found
      else
        h2
          span.profile__name #{profile.username}
          span.profile__balance.white $#[span#Balance #{profile.chips}]
        if errorFlash.length
          div.alert-box.alert #{errorFlash}

        if !profile._id && !loggedIn && isYou
          div
            button#Topup.secondary.small Top up chips to $3000

        if profile._id
          div.row
            div.medium-9.column
              div#Graph.account__well
            div.medium-3.column
              include ./account/stats.jade
              if loggedIn && !isYou
                include ./account/profileFriend.jade


        if loggedIn && isYou
          div.row
            div.medium-9.column
              include ./account/handHistory.jade
            div.medium-3.column
              include ./account/accountFriends.jade

  if isYou
    script(type='text/javascript').
      $(document).ready(function() {
        $('#Topup').on('click', function() {
          $.ajax({
            type: 'POST',
            url: '/account/topup-chips',
            data: {
              element: document.getElementById('sessionID')
            }
          })
          .done(function(data) {
            $('#Balance').text(data.chips);
            $('#Chips').text(data.chips);
          });
        });
      });

  if loggedIn
    script(type='text/javascript').
      $(document).ready(function() {
        $('.account__friend-action').on('click', function() {
          var action = $(this).data('action');
          var friendID = $(this).data('friend-id');
          var $el = $(this);

          $.ajax({
            type: 'POST',
            url: '/account/friend',
            data: {
                friendID: friendID
              , action: action
            }
          })
          .done(function() {
            switch(action) {
              case 'accept':
                $('#Friends_empty').remove();
                $el.closest('ul').prev().children('span').trigger('click');
                $el.closest('.account__friend__handle').detach().appendTo('#Friends');
                $el.parent().siblings().remove();
                $el.text('Unfriend');
                $el.data('action', 'unfriend');
                break;
              case 'ignore':
                $el.closest('.account__friend__handle').remove();
                break;
              case 'block':
                $el.closest('.account__friend__handle').remove();
                break;
              case 'unfriend':
                $el.closest('.account__friend__handle').remove();
                if($('#Friends').children().length == 0) {
                  $('#Friends').append('<li id="Friends_empty"><a href="/users"></a></li>');
                }
                break;
            }
          })
        });
      });

  script(type='text/javascript').
    $(document).ready(function() {
      Highcharts.setOptions({
          lang: {
            thousandsSep: ','
          }
      });

      $('#Graph').highcharts({
        chart: {
          backgroundColor: 'transparent'
          , type: 'line'
        },
        title: {
          text: 'Lifetime Profitability',
          color: '#4f0000'
        },
        series: [{
          name: 'Profitability',
          color: '#4f0000',
          data: []
        }],
        yAxis: {
          title: {
            text: 'Profitability'
            , style: 'color: #4f0000'
          }
          , gridLineColor: '#ff8c8c'
          , tickColor: '#4f0000'
          , lineColor: '#4f0000'
          , lineWidth: '2'
          , labels: {
            style: 'color: #4f0000'
          }
        },
        xAxis: {
          title: {
            text: 'Date Played'
            , style: 'color: #4f0000'
          }
          , type: 'datetime'
          , dateTimeLabelFormats: {
            millisecond: '%b-%d<br/>%H:%M',
            second: '%b-%d<br/>%H:%M',
            minute: '%b-%d<br/>%H:%M',
            hour: '%b-%d<br/>%H:%M',
            day: '%b-%d',
            week: '%Y<br/>%b-%d',
            month: '%b %Y',
            year: '%Y'
          }
          , lineColor: '#4f0000'
          , lineWidth: '2'
          , tickColor: '#4f0000'
          , labels: {
            style: 'color: #4f0000'
          }
        },
        legend: {
          enabled: false
        },
        tooltip: {
          valuePrefix: '$',
          xDateFormat: '%b %d %Y %H:%M'
        },
        plotOptions: {
            line: {
                marker: {
                    enabled: false
                }
            }
        },
        credits: {
          enabled: false
        },
        exporting: {
          enabled: false
        }
      });
      var chipTracker = JSON.parse('!{chipTracker}'); 
      var mySeries = [];
      // offset in minutes converted to milliseconds
      var offset = new Date().getTimezoneOffset() * 60000;
      for (var i = 0; i < chipTracker.length; i++) {
        var epochDate = Date.parse(chipTracker[i].date);
        epochDate -= offset;
        mySeries.push([epochDate, chipTracker[i].change]);
      }
      var chart = $('#Graph').highcharts();
      chart.series[0].setData(mySeries);
    })
