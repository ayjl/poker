extends ./layout

block content
  div.row
    div.small-12.column
      if !profile
        h1 This profile couldn't be found
      else
        h1 #{profile.username}
        if errorFlash.length
          div.alert-box.alert #{errorFlash}
        p Current Balance is: <span id='Balance'>#{profile.chips}</span>
        container#Graph
        if loggedIn
          if isYou
            p #{profile.email}
            button(class='btn', id='Topup') Top Up Balance (2000)
            h2 Friends
            ul#Friends
              each friend in friends
                li: a(href='/profile/'+friend._id._id) #{friend._id.username}
            h2 Friend Requests
            ul
              each friend in incomingFriends
                li
                  a(href='/profile/'+friend._id._id) #{friend._id.username}
                  span.account__friend-action(data-action='accept' data-friend-id='#{friend._id._id}') Accept
                  span.account__friend-action(data-action='ignore' data-friend-id='#{friend._id._id}') Ignore
                  span.account__friend-action(data-action='block' data-friend-id='#{friend._id._id}') Block
          else
            include ./account/friends.jade
  
  if profile
    script(type='text/javascript').
      $(document).ready(function() {
        $('#Topup').on('click', function() {
          $.ajax({
            type: 'POST',
            url: '/account/topup-chips',
            data: {
              element: document.getElementById('sessionID')
            }
          })
          .done(function(data) {
            $('#Balance').text(data.chips);
            $('#Chips').text(data.chips);
          });
        });

        $('.account__friend-action').on('click', function() {
          var action = $(this).data('action');
          var friendID = $(this).data('friend-id');
          var $el = $(this);

          $.ajax({
            type: 'POST',
            url: '/account/friend',
            data: {
                friendID: friendID
              , action: action
            }
          })
          .done(function() {
            switch(action) {
              case 'accept':
                $el.closest('li').detach().appendTo('#Friends');
                $el.siblings('span').remove();
                $el.remove();
                break;
              case 'ignore':
                $el.closest('li').remove();
                break;
              case 'block':
                $el.closest('li').remove();
                break;
            }
          })
        });

        $('#Graph').highcharts({
          chart: {},
          credits: {
            enabled: false
          },
          exporting: {
            enabled: false
          },
          title: {
            text: 'Overall lifetime profitability',
            x: -20
          },
          yAxis: {
            title: {
              text: 'Profitability'
            }
          },
          xAxis: {
            type: 'datetime',
            dateTimeLabelFormats: {
                month: '%e. %b',
                year: '%b'
            },
            title: {
              text: 'Time Played'
            }
          },
          series: [{
            name: 'Profitability',
            data: []
          }]
        });
        var chipTracker = JSON.parse('!{chipTracker}'); 
        var mySeries = [];
        // offset in minutes converted to milliseconds
        var offset = new Date().getTimezoneOffset() * 60000;
        for (var i = 0; i < chipTracker.length; i++) {
            var epochDate = Date.parse(chipTracker[i].date);
            epochDate -= offset;
            mySeries.push([epochDate, chipTracker[i].change]);
        }
        var chart = $('#Graph').highcharts();
        chart.series[0].setData(mySeries); 
      });